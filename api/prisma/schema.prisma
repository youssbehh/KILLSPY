// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  ID_User   Int     @id @default(autoincrement())
  Username  String  @unique
  Email     String  @unique
  Password  String
  MMR       Int
  isGuest    Boolean @default(false)
  CreatedAt  DateTime @default(now())
  archived  Boolean @default(false)
  deletionDate  DateTime?

  Leaderboard Leaderboard? 
  Roles      Roles[]
  Ranks      Ranks[]
  Purchases  PurchaseHistory[] 
  Sessions   Session[] 
  Friends    Friends[] 
  Inventory  Inventory[] 
  Result     GameHistory[] 
}

model Session {
  ID_Session      Int     @id @default(autoincrement())
  Connected       Boolean
  LastConnection  DateTime
  TotalLoginCount Int
  User            Users    @relation(fields: [ID_User], references: [ID_User], onDelete: Cascade)
  ID_User         Int
}

model Roles {
  ID_Role  Int    @id @default(autoincrement())
  Role     String
  User     Users   @relation(fields: [ID_User], references: [ID_User], onDelete: Cascade)
  ID_User  Int
}

model Ranks {
  ID_Rank   Int    @id @default(autoincrement())
  RankName  String
  MMR_Range String
  Users     Users[]
}

model Emotes {
  ID_Emote      Int    @id @default(autoincrement())
  EmoteName     String
  EmotePicture  String
  Shop          Shop[]
}

model DailyGift {
  ID_Dailygift  Int     @id @default(autoincrement())
  ClaimedAt     DateTime
  Gift_Item     String
}

model ProfilePictures {
  ID_PP   Int    @id @default(autoincrement())
  PPName  String
  PP      String
  Theme       Themes[]
}

model Cards {
  ID_THCard    Int    @id @default(autoincrement())
  THCardName   String
  THCard       String
  Theme       Themes[]
}

model Coupons {
  ID_Coupon  Int    @id @default(autoincrement())
  Code       String @unique
  State      Boolean
  Qty        Int
}

model Themes {
  ID_ThemeBG  Int    @id @default(autoincrement())
  ThemeBGName String
  ThemeBG     String
  Card        Cards   @relation(fields: [ID_THCard], references: [ID_THCard])
  ProfilePic  ProfilePictures @relation(fields: [ID_PP], references: [ID_PP])
  ID_THCard   Int
  ID_PP       Int
  Shop        Shop[]
  Inventory   Inventory[]
}

model Friends {
  ID_Friend   Int     @id @default(autoincrement())
  Connected   Boolean
  Blocked     Boolean
  User        Users   @relation(fields: [ID_User], references: [ID_User], onDelete: Cascade)
  ID_User     Int
}

model GameHistory {
  ID_GameHistory Int @id @default(autoincrement())
  V_D           Boolean
  DateGame      DateTime
  MMRWin        Int
  User          Users  @relation(fields: [ID_User], references: [ID_User], onDelete: Cascade)
  ID_User       Int
}

model PurchaseHistory {
  ID_Achat      Int     @id @default(autoincrement())
  PurchaseDate  DateTime
  Qty           Int
  User          Users    @relation(fields: [ID_User], references: [ID_User], onDelete: Cascade)
  ID_User       Int
  Shop          Shop[]
}

model Leaderboard {
  ID_Leaderboard Int @id @default(autoincrement())
  User          Users @relation(fields: [ID_User], references: [ID_User], onDelete: Cascade)
  ID_User       Int  @unique
}

model Items {
  ID_Item       Int     @id @default(autoincrement())
  ItemName      String
  ItemPrice     Float
  ItemImage     String
  ItemOutDate   DateTime
  ItemDisplay   Boolean
  Stock         Int
  Shop          Shop[]
}

model Shop {
  ID_Shop    Int    @id @default(autoincrement())
  TimeLeft   DateTime
  Theme      Themes? @relation(fields: [ID_ThemeBG], references: [ID_ThemeBG])
  ID_ThemeBG Int?
  Achat      PurchaseHistory? @relation(fields: [ID_Achat], references: [ID_Achat])
  ID_Achat   Int?
  Emote      Emotes? @relation(fields: [ID_Emote], references: [ID_Emote])
  ID_Emote   Int?
  Item       Items? @relation(fields: [ID_Item], references: [ID_Item])
  ID_Item    Int?
}

model Inventory {
  ID_Inventory Int    @id @default(autoincrement())
  Money       Float
  Qty         Int
  Theme       Themes? @relation(fields: [ID_ThemeBG], references: [ID_ThemeBG], onDelete: Cascade)
  ID_ThemeBG  Int?
  User        Users  @relation(fields: [ID_User], references: [ID_User], onDelete: Cascade)
  ID_User     Int
}

